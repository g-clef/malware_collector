import os
import requests
from bs4 import BeautifulSoup
from malware_collector import MalwareCollector


class MalwareBazaarCollector(MalwareCollector):
    # collect malware from https://bazaar.abuse.ch/

    base_url = "https://mb-api.abuse.ch/downloads/"

    def __init__(self):
        super(MalwareBazaarCollector, self).__init__()
        self.base_path = self.configfile.get("MalwareBazaar", "path")

    def get(self):
        base_list = requests.get(self.base_url)
        soup = BeautifulSoup(base_list.content, features='html.parser')
        table = soup.find("table")
        for row in table.find_all('tr'):
            th = row.find("th")
            if th is not None:
                continue
            a = row.find("a")
            if "href" not in a.attrs:
                continue
            href = a.attrs['href']
            if not href.endswith(".zip"):
                continue
            name = a.text
            download_url = self.base_url + href
            print(f"getting {name} from {download_url}")
            target_dir = os.path.join(self.base_path, name)
            if not os.path.exists(target_dir):
                os.mkdir(target_dir)
            full_saved_path = os.path.join(target_dir, name + ".zip")
            if not os.path.exists(full_saved_path):
                response = requests.get(download_url, stream=True)
                with open(full_saved_path, "wb") as fileHandle:
                    for chunk in response.iter_content(chunk_size=8192):
                        fileHandle.write(chunk)
                print(f"fetched {name}")


if __name__ == "__main__":
    bazaar = MalwareBazaarCollector()
    bazaar.get()
