import configparser
import os
import hashlib


class MalwareCollector:
    def __init__(self):
        self.configfile = configparser.ConfigParser()
        self.configfile.read("malware_collector.conf")

    @staticmethod
    def make_hashes(filename):
        if os.path.isdir(filename):
            raise Exception("not a file")
        md5 = hashlib.md5()
        sha1 = hashlib.sha1()
        with open(filename, 'rb') as fileHandle:
            for chunk in iter(lambda: fileHandle.read(65536), b""):
                md5.update(chunk)
                sha1.update(chunk)
        return md5.hexdigest(), sha1.hexdigest()


class VXVaultCollector:
    # plan: hit http://vxvault.net/ViriList.php daily. Find the ones we don't already have, pull those
    pass


class MacMalwareCollector:
    # plan: hit https://macmalware.manwe.io/feed.json, get the list of recent malware, pull all the ones we haven't seen
    # yet.
    pass


class ObjectiveSeeCollector:
    # plan: hit https://objective-see.com/malware.json, walk it to find ones we don't already have yet, pull those
    pass


class URLHausCollector:
    # collect data and malware from https://urlhaus.abuse.ch/api/#retrieve
    pass
